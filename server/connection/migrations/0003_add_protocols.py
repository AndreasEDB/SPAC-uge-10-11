# Generated by Django 5.1.4 on 2024-12-10 20:15

from django.db import migrations


def create_protocol(apps, schema_editor):
    # Dynamically get the Protocol model
    Protocol = apps.get_model('connection', 'Protocol')
    # Create the default Protocols if they do not exist
    if not Protocol.objects.filter(name='FTP').exists():
        Protocol.objects.create(
            name='FTP',
            port=21
        )
    if not Protocol.objects.filter(name='SFTP').exists():
        Protocol.objects.create(
            name='SFTP',
            port=22
        )

def remove_protocol(apps, schema_editor):
    # Dynamically get the Protocol model
    Protocol = apps.get_model('connection', 'Protocol')
    # Remove the default Protocols (if needed during rollback)
    Protocol.objects.filter(name='FTP').delete()
    Protocol.objects.filter(name='SFTP').delete()


class Migration(migrations.Migration):
        dependencies = [
            ('connection', '0002_add_default_category'),
        ]

        operations = [
            migrations.RunPython(create_protocol, remove_protocol)
        ]
